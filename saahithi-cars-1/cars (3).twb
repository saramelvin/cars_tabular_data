<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0812.0001                               -->
<workbook source-build='10.0.0 (10000.16.0812.0001)' source-platform='win' version='10.0' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='cars_30' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cars' inline='true' name='federated.1i5eo4u13696ot18eerv00nvfmqt' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cars' name='textscan.18kpp7z0zm029n10sfesa0irth45'>
            <connection class='textscan' directory='C:/Users/saahithi/Desktop/UNCC/VA' filename='cars.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.18kpp7z0zm029n10sfesa0irth45' name='cars.csv' table='[cars#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Car' ordinal='0' />
            <column datatype='string' name='Manufacturer' ordinal='1' />
            <column datatype='real' name='MPG' ordinal='2' />
            <column datatype='integer' name='Cylinders' ordinal='3' />
            <column datatype='real' name='Displacement' ordinal='4' />
            <column datatype='integer' name='Horsepower' ordinal='5' />
            <column datatype='integer' name='Weight' ordinal='6' />
            <column datatype='real' name='Acceleration' ordinal='7' />
            <column datatype='integer' name='Model Year' ordinal='8' />
            <column datatype='string' name='Origin' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Car</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Car]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Car</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manufacturer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Manufacturer]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Manufacturer</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MPG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MPG]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>MPG</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cylinders</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cylinders]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Cylinders</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Displacement</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Displacement]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Displacement</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Horsepower</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Horsepower]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Horsepower</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Acceleration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Acceleration]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Acceleration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cars.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Acceleration]' role='measure' type='quantitative' />
      <column datatype='string' name='[Car]' role='dimension' type='nominal' />
      <column datatype='real' name='[Displacement]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Horsepower]' role='measure' type='quantitative' />
      <column datatype='real' name='[MPG]' role='measure' type='quantitative' />
      <column datatype='string' name='[Manufacturer]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Weight]' role='measure' type='quantitative' />
      <column-instance column='[MPG]' derivation='Avg' name='[avg:MPG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Car]' derivation='None' name='[none:Car:nk]' pivot='key' type='nominal' />
      <column-instance column='[Manufacturer]' derivation='None' name='[none:Manufacturer:nk]' pivot='key' type='nominal' />
      <column-instance column='[Acceleration]' derivation='Sum' name='[sum:Acceleration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Displacement]' derivation='Sum' name='[sum:Displacement:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Horsepower]' derivation='Sum' name='[sum:Horsepower:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MPG]' derivation='Sum' name='[sum:MPG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\saahithi\Desktop\UNCC\VA\cars.tde' schema='Extract' tablename='Extract' update-time='10/02/2016 11:54:12 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='406' timestamp-start='2016-10-02 23:54:12.451' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Acceleration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Acceleration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Acceleration</remote-alias>
              <ordinal>0</ordinal>
              <family>cars.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>96</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6300.9999999999936</statistic>
                <statistic aggregation='Avg' datatype='real'>15.519704433497521</statistic>
                <statistic aggregation='Min' datatype='real'>8.0</statistic>
                <statistic aggregation='Max' datatype='real'>24.800000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.8033588163426297</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.7999042755154644</statistic>
                <statistic aggregation='Var' datatype='real'>7.8588206531659504</statistic>
                <statistic aggregation='VarP' datatype='real'>7.839463952049778</statistic>
                <statistic aggregation='Count' datatype='integer'>406</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>100972.47999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Car</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Car]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Car</remote-alias>
              <ordinal>1</ordinal>
              <family>cars.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>308</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&apos;cuda 340&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zephyr 6&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>406</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cylinders</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Cylinders]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cylinders</remote-alias>
              <ordinal>2</ordinal>
              <family>cars.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2223.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5.4753694581280792</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>8</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7121596315485297</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7100497605911169</statistic>
                <statistic aggregation='Var' datatype='real'>2.9314906039043969</statistic>
                <statistic aggregation='VarP' datatype='real'>2.9242701836977361</statistic>
                <statistic aggregation='Count' datatype='integer'>406</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13359.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Displacement</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Displacement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Displacement</remote-alias>
              <ordinal>3</ordinal>
              <family>cars.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>79080.5</statistic>
                <statistic aggregation='Avg' datatype='real'>194.77955665024629</statistic>
                <statistic aggregation='Min' datatype='real'>68.0</statistic>
                <statistic aggregation='Max' datatype='real'>455.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>104.92245837948875</statistic>
                <statistic aggregation='StdevP' datatype='real'>104.79316386533469</statistic>
                <statistic aggregation='Var' datatype='real'>11008.722272395547</statistic>
                <statistic aggregation='VarP' datatype='real'>10981.607192906889</statistic>
                <statistic aggregation='Count' datatype='integer'>406</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19861797.25</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Horsepower</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Horsepower]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Horsepower</remote-alias>
              <ordinal>4</ordinal>
              <family>cars.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>42033.0</statistic>
                <statistic aggregation='Avg' datatype='real'>105.0825</statistic>
                <statistic aggregation='Min' datatype='integer'>46</statistic>
                <statistic aggregation='Max' datatype='integer'>230</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.768779183105202</statistic>
                <statistic aggregation='StdevP' datatype='real'>38.72028788309818</statistic>
                <statistic aggregation='Var' datatype='real'>1503.018239348371</statistic>
                <statistic aggregation='VarP' datatype='real'>1499.26069375</statistic>
                <statistic aggregation='Count' datatype='integer'>400</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5016637.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MPG</remote-name>
              <remote-type>5</remote-type>
              <local-name>[MPG]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MPG</remote-alias>
              <ordinal>5</ordinal>
              <family>cars.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>130</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9358.8000000000029</statistic>
                <statistic aggregation='Avg' datatype='real'>23.514572864321615</statistic>
                <statistic aggregation='Min' datatype='real'>9.0</statistic>
                <statistic aggregation='Max' datatype='real'>46.600000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.8159843125657664</statistic>
                <statistic aggregation='StdevP' datatype='real'>7.8061590612744167</statistic>
                <statistic aggregation='Var' datatype='real'>61.089610774274156</statistic>
                <statistic aggregation='VarP' datatype='real'>60.936119289916682</statistic>
                <statistic aggregation='Count' datatype='integer'>398</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>244320.76000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Manufacturer</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Manufacturer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Manufacturer</remote-alias>
              <ordinal>6</ordinal>
              <family>cars.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;amc&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;vw&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>406</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model Year</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Model Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model Year</remote-alias>
              <ordinal>7</ordinal>
              <family>cars.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>30824.0</statistic>
                <statistic aggregation='Avg' datatype='real'>75.921182266009851</statistic>
                <statistic aggregation='Min' datatype='integer'>70</statistic>
                <statistic aggregation='Max' datatype='integer'>82</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.7487373454558792</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.7441178275637346</statistic>
                <statistic aggregation='Var' datatype='real'>14.053031685215593</statistic>
                <statistic aggregation='VarP' datatype='real'>14.01841830668058</statistic>
                <statistic aggregation='Count' datatype='integer'>406</statistic>
                <statistic aggregation='Median' datatype='integer'>76</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2345886.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>8</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>406.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>406</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>406.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Origin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Origin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Origin</remote-alias>
              <ordinal>9</ordinal>
              <family>cars.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;American&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Japanese&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>406</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;American&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Weight</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Weight</remote-alias>
              <ordinal>10</ordinal>
              <family>cars.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>356</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1209642.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2979.4137931034484</statistic>
                <statistic aggregation='Min' datatype='integer'>1613</statistic>
                <statistic aggregation='Max' datatype='integer'>5140</statistic>
                <statistic aggregation='Stdev' datatype='real'>847.00432823935091</statistic>
                <statistic aggregation='StdevP' datatype='real'>845.96057636012983</statistic>
                <statistic aggregation='Var' datatype='real'>717416.33205619408</statistic>
                <statistic aggregation='VarP' datatype='real'>715649.29675556312</statistic>
                <statistic aggregation='Count' datatype='integer'>406</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3894577674.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.43361' measure-ordering='alphabetic' measure-percentage='0.56639' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Manufacturer:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;citroen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;volvo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;amc&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;peugeot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cadillac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;saab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;datsun&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;vw&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;capri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;subaru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;nissan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;audi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;plymouth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;mercedes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;chevrolet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;toyota&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;honda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;mercury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;oldsmobile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dodge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;chrysler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;triumph&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bmw&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pontiac&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;mazda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fiat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;buick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;renault&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Car:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;100 ls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;304&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4000&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;bel air&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;champ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;concord dl 6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;cricket&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;estate wagon (sw)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;glc deluxe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;j2000 se hatchback&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;model 111&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;omega brougham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;rampage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;satellite (sw)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;skylark 320&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;vega (sw)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;210 mpg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;610&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;900s&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;arrow gs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;celica gt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;colt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;corona mark ii (sw)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;diesel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;fury gran sedan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;horizon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;malibu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;mustang ii&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pinto runabout&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;satellite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;torino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18i&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;264gl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;810 maxima&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;astro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;century limited&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;colt m/m&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cougar brougham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;eldorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;glc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hornet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;marquis brougham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;none&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rabbit c (diesel)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;scirocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;super beetle 117&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;valiant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;124b&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;411 (sw)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;accord&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;capri v6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;chevelle malibu classic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;corolla 1200&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cutlass salon brougham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;fairmont 4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;granada ghia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;lebaron town @ country (sw)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;monarch ghia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;opel manta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;reliant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;stanza xe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;volare custom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;100ls&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;310&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5000&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;c10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;charger 2.2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;concours&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;custom suburb&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;f108&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;gran torino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;jetta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;monaco (sw)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;omni&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ranger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;skylark limited&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;torino (sw)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ventura sj&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1131 deluxe sedan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;280-zx&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;99e&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;b210&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;c20&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;century luxus (sw)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;concord&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;electra 225 custom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;glc 4&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hornet sportabout (sw)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;matador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;nova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;rabbit custom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;seville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;valiant custom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;200sx&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;510 hatchback&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;aries se&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;cavalier 2-door&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;civic (auto)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;corona liftback&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;dasher (diesel)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fox&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;grand prix lj&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lynx l&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;mustang cobra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pinto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;safari (sw)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;tercel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;240d&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 gtl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;626&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;aspen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;celica gt liftback&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;colt (sw)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;coronet brougham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;diplomat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;fury iii&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;horizon 4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;malibu classic (sw)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;mustang ii 2+2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pl510&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;satellite custom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;torino 500&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;145e (sw)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;510&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ambassador dpl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;catalina brougham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;civic 1300&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;corona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dart custom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;fiesta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;grand marquis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ltd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;monza 2+2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;phoenix lj&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;rx-7 gs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;sunbird coupe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;zephyr&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1200&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;280s&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;99gle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;b210 gx&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;century special&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;concord d/l&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;country squire (sw)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;escort 2h&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;glc custom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ii&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;matador (sw)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;mustang boss 302&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nova custom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rabbit custom diesel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;skyhawk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;vega&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;128&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;504&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;accord cvcc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;caprice classic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;chevette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;corolla 1600 (sw)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;cutlass supreme&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fairmont (auto)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;granada gl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lecar deluxe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;monte carlo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pacer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;rx2 coupe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;starfire sx&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;volare premier v8&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;131&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;504 (sw)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;accord lx&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;carina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;citation&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;corolla liftback&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;d100&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ds-21 pallas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fairmont (man)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;granada l&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;lemans v6&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;monte carlo landau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pacer d/l&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;rx3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;starlet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;woody&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;200-sx&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;510 (sw)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ambassador sst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;cavalier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;civic 1500 gl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;corona hardtop&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;dasher&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;firebird&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;grand prix&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ltd landau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;mustang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pickup&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;rebel sst (sw)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;s-10&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;super beetle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;zephyr 6&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;210&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;604sl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;aries wagon (sw)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;cavalier wagon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;civic cvcc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;corona mark ii&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;delta 88 royale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;gremlin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;magnum xe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;mustang gl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pinto (sw)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sapporo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;thunderbird&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;124 sport coupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;310 gx&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5000s (diesel)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;camaro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;chevelle concours (sw)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cordoba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cutlass ciera (diesel)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;f-10 hatchback&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gran torino (sw)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;lebaron medallion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;monaco brougham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;opel 1900&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;rebel sst&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;spirit dl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vista cruiser&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2002&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;300d&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;99le&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;b-210&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;challenger se&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;concord dl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;cressida&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;escort 4w&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;glc custom l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;impala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;maverick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;omega&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;rabbit l&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;skylark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;vega 2300&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12 (sw)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;244dl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;710&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;aspen 6&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;century&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;colt hardtop&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coronet custom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;f250&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;futura&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;horizon miser&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;mark ii&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;new yorker brougham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;prelude&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;satellite custom (sw)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tr7 coupe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;144ea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;505s turbo diesel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ambassador brougham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;catalina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;civic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;corolla tercel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;d200&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fairmont futura&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;grand fury&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lesabre custom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;monte carlo s&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rx-4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;strada custom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;x1.9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;&apos;cuda 340&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;124 tc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;320i&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;capri 2000&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;chevelle malibu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;corolla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cutlass ls&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fairmont&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;granada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;lebaron salon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;monarch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;opel isuzu deluxe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;regal sport coupe (turbo)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;st. regis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;volare&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1200d&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12tl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;245&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;810&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;aspen se&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;century 350&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;colt hatchback custom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;coronet custom (sw)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;duster&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;galaxie 500&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;horizon tc3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;marquis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;newport royal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rabbit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;satellite sebring&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;type 3&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Acceleration:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Displacement:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:MPG:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Horsepower:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1i5eo4u13696ot18eerv00nvfmqt]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Weight:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1i5eo4u13696ot18eerv00nvfmqt'>
      <datasources>
        <datasource caption='cars' name='federated.1i5eo4u13696ot18eerv00nvfmqt' />
      </datasources>
      <datasource-dependencies datasource='federated.1i5eo4u13696ot18eerv00nvfmqt'>
        <column datatype='string' name='[Car]' role='dimension' type='nominal' />
        <column datatype='real' name='[MPG]' role='measure' type='quantitative' />
        <column-instance column='[MPG]' derivation='Avg' name='[avg:MPG:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Car]' derivation='None' name='[none:Car:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' included-values='in-range-or-null'>
        <min>9.0</min>
        <max>36.0</max>
      </filter>
      <filter class='categorical' column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]'>
        <groupfilter function='level-members' level='[none:Car:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Acceleration and Weight'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.1i5eo4u13696ot18eerv00nvfmqt' />
          </datasources>
          <datasource-dependencies datasource='federated.1i5eo4u13696ot18eerv00nvfmqt'>
            <column datatype='real' name='[Acceleration]' role='measure' type='quantitative' />
            <column datatype='string' name='[Car]' role='dimension' type='nominal' />
            <column datatype='real' name='[MPG]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Weight]' role='measure' type='quantitative' />
            <column-instance column='[MPG]' derivation='Avg' name='[avg:MPG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Car]' derivation='None' name='[none:Car:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Acceleration]' derivation='Sum' name='[sum:Acceleration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]</column>
            <column>[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Weight:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Acceleration:qk]' scope='rows' value='Acceleration ' />
            <format attr='subtitle' class='0' field='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Acceleration:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Acceleration:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[:Measure Names]' />
              <lod column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Model Year:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Model Year:qk]' z-order='1' />
            <reference-line axis-column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Acceleration:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Acceleration:qk]' z-order='2' />
            <reference-line axis-column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Weight:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Weight:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Acceleration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[:Measure Names]' />
              <lod column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Weight:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[:Measure Names]' />
              <lod column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Acceleration:qk] + [federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Weight:qk])</rows>
        <cols>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Model Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Displacement VS Horepower'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.1i5eo4u13696ot18eerv00nvfmqt' />
          </datasources>
          <datasource-dependencies datasource='federated.1i5eo4u13696ot18eerv00nvfmqt'>
            <column datatype='string' name='[Car]' role='dimension' type='nominal' />
            <column datatype='real' name='[Displacement]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Horsepower]' role='measure' type='quantitative' />
            <column datatype='real' name='[MPG]' role='measure' type='quantitative' />
            <column-instance column='[MPG]' derivation='Avg' name='[avg:MPG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Car]' derivation='None' name='[none:Car:nk]' pivot='key' type='nominal' />
            <column-instance column='[Displacement]' derivation='Sum' name='[sum:Displacement:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Horsepower]' derivation='Sum' name='[sum:Horsepower:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]</column>
            <column>[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Horsepower:qk]' field-type='quantitative' max='1033' min='-26' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Displacement:qk]' field-type='quantitative' max='2156.0044749786584' min='-182.71587729262023' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]' />
              <text column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]' />
              <text column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value='circle' />
                <format attr='mark-transparency' value='175' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Displacement:qk]</rows>
        <cols>[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Horsepower:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Manufacturer, Origin and Avg MPG'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.1i5eo4u13696ot18eerv00nvfmqt' />
          </datasources>
          <datasource-dependencies datasource='federated.1i5eo4u13696ot18eerv00nvfmqt'>
            <column datatype='string' name='[Car]' role='dimension' type='nominal' />
            <column datatype='real' name='[MPG]' role='measure' type='quantitative' />
            <column datatype='string' name='[Manufacturer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Origin]' role='dimension' type='nominal' />
            <column-instance column='[Origin]' derivation='Attribute' name='[attr:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[MPG]' derivation='Avg' name='[avg:MPG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Car]' derivation='None' name='[none:Car:nk]' pivot='key' type='nominal' />
            <column-instance column='[Manufacturer]' derivation='None' name='[none:Manufacturer:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Manufacturer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Manufacturer:nk]' />
              <groupfilter function='member' level='[none:Manufacturer:nk]' member='&quot;buick&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]</column>
            <column>[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]</column>
            <column>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Manufacturer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[attr:Origin:nk]' />
              <size column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' />
              <text column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Manufacturer:nk]' />
              <text column='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='cars' name='federated.1i5eo4u13696ot18eerv00nvfmqt' />
      </datasources>
      <datasource-dependencies datasource='federated.1i5eo4u13696ot18eerv00nvfmqt'>
        <column datatype='string' name='[Car]' role='dimension' type='nominal' />
        <column datatype='real' name='[MPG]' role='measure' type='quantitative' />
        <column-instance column='[MPG]' derivation='Avg' name='[avg:MPG:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Car]' derivation='None' name='[none:Car:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='85500' x='0' y='0'>
              <zone h='50000' id='1' name='Manufacturer, Origin and Avg MPG' w='42750' x='0' y='0' />
              <zone h='100000' id='9' name='Displacement VS Horepower' w='42750' x='42750' y='0' />
              <zone h='50000' id='13' name='Acceleration and Weight' w='42750' x='0' y='50000' />
            </zone>
            <zone fixed-size='145' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='14500' x='85500' y='0'>
              <zone h='100000' id='15' name='Acceleration and Weight' param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]' type='filter' w='14500' x='85500' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='9750' id='8' name='Manufacturer, Origin and Avg MPG' pane-specification-id='0' param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[attr:Origin:nk]' type='color' w='14000' x='2500' y='39625' />
        <zone h='7625' id='7' name='Manufacturer, Origin and Avg MPG' param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='69100' y='2375' />
        <zone h='7250' id='16' name='Acceleration and Weight' pane-specification-id='1' param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[:Measure Names]' type='color' w='14000' x='7900' y='83000' />
        <zone h='17125' id='12' name='Displacement VS Horepower' pane-specification-id='0' param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]' type='color' w='14200' x='68800' y='68250' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Manufacturer, Origin and Avg MPG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]' type='filter' />
            <card param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[attr:Origin:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[attr:Origin:nk]</field>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]</field>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Manufacturer:nk]</field>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Origin:nk]</field>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:MPG:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Displacement VS Horepower'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[:Measure Names]</field>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]</field>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Acceleration and Weight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[avg:MPG:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1i5eo4u13696ot18eerv00nvfmqt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[:Measure Names]</field>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]</field>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Model Year:qk]</field>
            <field>[federated.1i5eo4u13696ot18eerv00nvfmqt].[sum:Acceleration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Acceleration and Weight'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i5eo4u13696ot18eerv00nvfmqt].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Displacement VS Horepower'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i5eo4u13696ot18eerv00nvfmqt].[none:Car:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Manufacturer, Origin and Avg MPG'>
          <highlight field='[federated.1i5eo4u13696ot18eerv00nvfmqt].[attr:Origin:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='15' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Acceleration and Weight' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      tZJCPwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Displacement VS Horepower' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Manufacturer, Origin and Avg MPG' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
